
/*
 * Copyright (c) 2015, nwillc@gmail.com
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'http://maven.tmatesoft.com/content/repositories/releases/'
        }
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.7.1',
                'org.tmatesoft.sqljet:sqljet:1.1.9',
                'au.com.ish.gradle:release:2.2.2'
    }
}

plugins {
    id "java"
    id "jacoco"
    id "pmd"
    id "com.github.nwillc.vplugin" version "1.2.3"
    id "com.github.kt3k.coveralls" version "2.1.0"
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12',
                'org.assertj:assertj-core:1.7.1',
                'com.github.nwillc:contracts:1.6.7'
}

apply plugin: 'nexus'
apply plugin: 'release'
apply plugin: 'findbugs'


group = "com.github.nwillc"
archivesBaseName = "almost-functional"
version = "1.8.1"
targetCompatibility = "1.6"
sourceCompatibility = "1.6"

release {
  failOnSnapshotDependencies = true
  allowLocalModifications = true
  releaseDryRun = false
  scm = 'git'
}

nexus {
    attachSources = true
    attachTests = false
    attachJavadoc = true
    sign = true
}

modifyPom {
    project {
        name 'almost functional'
        description 'Almost Functional is very low impact functional classes inspired by guava, jdk 1.8 and various others.'
        url 'https://github.com/nwillc/almost-functional'
        inceptionYear '2014'

        scm {
            url 'https://github.com/nwillc/almost-functional'
            connection 'scm:https://nwillc@github.com:nwillc/almost-functional.git'
            developerConnection 'scm:git:git@github.com:nwillc/almost-functional.git'
        }

        licenses {
            license {
                name 'ISC'
                url 'http://www.isc.org/downloads/software-support-policy/isc-license/'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'nwillc'
                name 'N Christopher'
                email 'nwillc@gmail.com'
            }
        }
    }
}

findbugs {
    toolVersion = '2.0.3'
    ignoreFailures = true
}


jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

pmd {
    toolVersion = '4.3'
    sourceSets = [sourceSets.main]
    ignoreFailures = true
    ruleSets = [
            "basic",
            "braces",
            "naming",
            "clone",
            "codesize",
            "controversial",
            "design",
            "finalizers",
            "imports",
            "junit",
            "logging-java",
            "migrating",
            "optimizations",
            "strictexception",
            "strings",
            "sunsecure",
            "typeresolution",
            "unusedcode"
            ]
}

test {
    beforeTest { descriptor ->
        logger.lifecycle("\tRunning " + descriptor.className + "." + descriptor.name)
    }

    afterSuite { descriptor, result ->
        if (descriptor.parent == null) {
            logger.lifecycle("\tTests run: " + result.testCount
                    + ", Failures: " + result.failedTestCount
                    + ", Skipped: " + result.skippedTestCount)
        }
    }

    testLogging {
        exceptionFormat "full"
    }
}
